<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="helloworld-test-suite.xml" />
	<munit:test name="choiceRouter-testDefault-helloWorld" doc:id="dcf4ee2c-0dfe-4c4b-bf93-8140e0ca7360" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="c02426c3-a3ec-4a65-97d8-f7ae955f0732" processor="choice">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Choice" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="98db9edc-52b4-4ba7-9c69-089ba59224ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="abb353b0-4596-49e4-9e08-d584bf0e8d86" >
				<munit:payload value="#[readUrl('classpath://choiceRouter_testDefault_helloWorld\set_event_payload.dwl', 'application/dw', {onlyData: true})]" />
				<munit:attributes value="#[readUrl('classpath://choiceRouter_testDefault_helloWorld\set_event_attribute.dwl', 'application/dw', {onlyData: true})]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to helloworldFlow" doc:id="06dfe04a-3c51-4961-9563-c63b3de1b300" name="helloworldFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="02ae7398-b120-481c-a4c6-bff1ec5a64d6" message='"Payload does not match"'>
				<munit-tools:that ><![CDATA[#[%dw 2.0
import choiceRouter_testDefault_helloWorld::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="choiceRouter-testOption-helloName" doc:id="04d603a8-cbf4-4412-b40f-329c87eebe00" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ca6b27fb-da16-46cd-abf6-f88d837df457" processor="choice">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Choice" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="98db9edc-52b4-4ba7-9c69-089ba59224ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c8274788-cdf8-4df0-b1d5-732219d5ae8d" >
				<munit:payload value="#[readUrl('classpath://choiceRouter_testOption_helloName\set_event_payload.dwl', 'application/dw', {onlyData: true})]" />
				<munit:attributes value="#[readUrl('classpath://choiceRouter_testOption_helloName\set_event_attribute.dwl', 'application/dw', {onlyData: true})]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to helloworldFlow" doc:id="96a2cb89-cb3d-4c01-9fb3-57ae4a31d384" name="helloworldFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="9c123031-f614-4822-a824-0feb28221fe5" >
				<munit-tools:that ><![CDATA[#[import choiceRouter_testOption_helloName::assert_expression_payload
 ---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
